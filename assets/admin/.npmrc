# the package.json in this folder uses a preinstall and postinstall script for symlinking the javascript code of the
# sulu/sulu package into the node_modules directory: https://github.com/sulu/sulu/blob/2.x/symlink-vendor-directory.js
# when executing npm as root (eg. inside a docker container), npm will drop permissions when executing these scripts
# and therefore the symlink cannot be created. to prevent dropping permissions, we enable the "unsafe-perm" setting
# https://docs.npmjs.com/cli/v6/using-npm/scripts#user
unsafe-perm=true

# the javascript setup in this folder is not compatible with npm 7: https://github.com/sulu/skeleton/issues/88
# to display a helpful error message if an incompatible version is used, we enable the "engine-strict" setting
engine-strict=true

# unfortunately, npm 7 tries to resolve the dependency tree before validating the "engines" section of the
# package.json. to display a helpful message instead of a confusing dependency tree error when using npm 7, we enable
# the "legacy-peer-deps" setting: https://github.com/sulu/skeleton/issues/133#issuecomment-907271497
legacy-peer-deps=true

# unfortunataly, npm >= 7 ignores dependencies of local dependencies to handle them the same way as normal
# dependencies we require to use install-links which will create a tar ball for all packages and install
# it like a normal dependency with its dependencies
install-links=true

# pnpm does not install dependencies of local dependencies correctly by default but if use the shamefully-hoist
# configuration it also installs them correctly and can so be correctly build via pnpm
shamefully-hoist=true
